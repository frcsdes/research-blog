// Flex column or row
.flex(@dir; @center: false) {
	display: flex;
	flex-wrap: nowrap;
}
.flex(@dir; @center: false) when (@dir = col) { flex-flow: column; }
.flex(@dir; @center: false) when (@dir = row) { flex-flow: row; }
.flex(@dir; @center: false) when (@center) {
	align-items:     center;
	justify-content: center;
}
.flex(@dir; @center: false) when not (@center) {
	align-items:     flex-start;
	justify-content: flex-start;
}

// Mimics padding along the main flex direction
.flex-air(@dir; @size) when (@size > 0) {
	&:before,
	&:after {
		content: "\00a0";
		display: block;
		flex: 0 0 @size;
		overflow: hidden;
		position: relative;

	}
}
.flex-air(@dir; @size) when (@dir = col) {
	&:before,
	&:after {
		width: 100%;
	}
}
.flex-air(@dir; @size) when (@dir = row) {
	&:before,
	&:after {
		height: 100%;
	}
}

// Padded flex row container
.padded-flex-row(@padding-main; @padding-cross: @padding-main) {
	.flex(row);
	.flex-air(row, @padding-main);
	padding: @padding-cross 0;
}

// Padded flex col container
.padded-flex-col(@padding-main; @padding-cross: @padding-main) {
	.flex(col);
	.flex-air(col, @padding-main);
	padding: 0 @padding-cross;
}

// Resetting all <a>'s color to "inherit" acts weirdly, so here is a mixin
.colored-link(@color: var(--link)) {
	&,
	&:link,
	&:active,
	&:visited { color: @color; }
}
